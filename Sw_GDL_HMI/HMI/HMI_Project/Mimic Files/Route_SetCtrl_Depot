ASCII32,19,9,2018,17:44,36,1.1
W,BEGIN,"Route_SetCtrl_Depot","Route_SetCtrl_Depot"
	TEMPLATE,"",0,0,0,0,0,0,0,0,0,0,0,0
	POSITION,781,396
	SIZE,568,327,568,327,0,0,0,1280,1024,562,305
	BACKCOLOR,191,191,191,0,0,0
	TITLE,1
	MULTILANG,BEGIN
		LANG_DEFAULT,2058
		LANG,BEGIN,1033
			ROLE_DEFAULT,-1
			ROLE,-1,"   Establecer itinerario"
		LANG,END
		LANG,BEGIN,2058
			ROLE_DEFAULT,0
			ROLE,0,"   Establecer itinerario"
		LANG,END
	MULTILANG,END
	STYLE,1,0,0,1,1,0,0,0,0,1,0,1,0,0,1,0,0
	GRID,1,0,8,8,0,0,0,0,0,0
	LAYERS,65535
	RIGHTS,0,0,0.000000,64.000000,0,65535,0,0
	INCLUDED,0,2,0,0,0
	LINK,1,"",""
	LINK,2,"",""
	LINK,3,"",""
	LINK,4,"",""
	LINK,5,"",""
	LINK,6,"",""
	LINK,7,"",""
	LINK,8,"",""
	LINK,9,"",""
	LINK,10,"",""
	BACKBMP,"",0,0
	BACKOBJECT,"",0,0
	BEFORE,"","","",""
	EVENTS,1
	BINOBJ,"Route_SetCtrl_Depot.binary"
W,END
VBA_HOSTPROJECT,BEGIN
	'* *******************************************************************************************
	'* Copyright, ALSTOM Transport Information Solutions, 2008. All Rights Reserved.
	'* The software is to be treated as confidential and it may not be copied, used or disclosed
	'* to others unless authorised in writing by ALSTOM Transport Information Solutions.
	'* *******************************************************************************************
	'* Mimic Name:  Route Setting mimic
	'* *******************************************************************************************
	'* Purpose:     It Manages:
	'*              -   the list of route exit signals names,
	'*              -   the display of the label of the button "OK",
	'*              -   the command sending (to set the route).
	'* *******************************************************************************************
	'* Author:              Artur Valverde
	'* Date:                Aug '11
	'* *******************************************************************************************
	'* Ref:             1. OPERATIONAL HMI INTERFACE DESCRIPTION ETE_02-012036900_02-ET-9.88
	'* *******************************************************************************************
	
	'* Declarations
	'* **********************************************
	Option Explicit
	
	'* Constants
	'* **********************************************
	Const c_strServerSeparator As String = ":"
	
	'* Value to be sent in the command
	Private Const c_iCommandValue As Integer = 1
	
	Private Const c_strDestinationsTag As String = ".Destinations.Value"
	Private Const c_strNormalRouteCommandTag As String = ".Detection.Template.iCommand"
	Private Const c_strPermanentRouteCommandTag As String = ".Automatic.Template.iCommand"
	Private Const c_strRouteStatusTag As String = ".Detection.Template.iEqpState"
	Private Const c_strSignalTrackName As String = ".TrackName.Value"
	'Private Const c_iCommandValue As Integer = 1
	
	Private sRouteCMD As String
	Dim WithEvents m_OPC_RouteCommand As Variable
	Dim WithEvents m_OPCBlockingRoute As Variable
	Dim m_OPCSignalTrackName As Variable
	Dim m_colroute As Collection
	
	Dim WithEvents m_OPCSet_SignalTrackName As Iconis_CLS_OPCSet
	Dim WithEvents m_OPCSet_RouteBlockingStatus As Iconis_CLS_OPCSet
	Private Sub btnOK_Click()
	On Error GoTo ErrorHandler
	        Call CBTrace(CBTRACE_VBA, ThisMimic.Name, "btnOK_Click", "Begin Function")
	Dim strClusterName As String
	Dim strRoute As String
	
	    If Not Variables.Item(Me.Branch & ".OKEnabled%").Value Then Exit Sub
	  
	    If (optPadrao = True) Then
	    If ((m_OPC_RouteCommand.Status = fvVariableStatusGood) And (m_OPC_RouteCommand.Quality = 192)) Then
	    '*Send the command
	        m_OPC_RouteCommand.Value = c_iCommandValue
	    End If
	   ElseIf (optComboio = True) Then
	    m_OPC_RouteCommand.Value = c_iCommandValue
	    End If
	   
	    Me.Close fvDoNotSaveChanges
	  Exit Sub
	ErrorHandler:
	        Call CBTrace(CBTRACEF_ALWAYS, ThisMimic.Name, "btnOK_Click", Err.Description)
	End Sub
	Private Sub m_OPCSet_RouteBlockingStatus_OnConnection(arrValue() As Variant, arrStatus() As fvVariableStatus)
	On Error GoTo ErrorHandler
	        Call CBTrace(CBTRACE_VBA, ThisMimic.Name, "m_OPCSet_RouteBlockingStatus_OnConnection", "Begin Function")
	    If m_OPCSet_RouteBlockingStatus.IsAllGood = True Then Update_RouteTracknames
	Exit Sub
	ErrorHandler:
	        Call CBTrace(CBTRACEF_ALWAYS, ThisMimic.Name, "m_OPCSet_RouteBlockingStatus_OnConnection", Err.Description)
	End Sub
	
	Private Sub m_OPCSet_RouteBlockingStatus_OnRefresh(lIndex As Long, Value As Variant, Status As fvVariableStatus)
	On Error GoTo ErrorHandler
	        Call CBTrace(CBTRACE_VBA, ThisMimic.Name, "m_OPCSet_RouteBlockingStatus_OnRefresh", "Begin Function")
	If m_OPCSet_RouteBlockingStatus.IsAllGood = True Then Update_RouteTracknames
	Exit Sub
	ErrorHandler:
	        Call CBTrace(CBTRACEF_ALWAYS, ThisMimic.Name, "m_OPCSet_RouteBlockingStatus_OnRefresh", Err.Description)
	End Sub
	
	
	Private Sub m_OPCSet_SignalTrackName_OnConnection(arrValue() As Variant, arrStatus() As fvVariableStatus)
	On Error GoTo ErrorHandler
	        Call CBTrace(CBTRACE_VBA, ThisMimic.Name, "m_OPCSet_SignalTrackName_OnConnection", "Begin Function")
	If m_OPCSet_SignalTrackName.IsAllGood = True Then Update_RouteTracknames
	Exit Sub
	ErrorHandler:
	        Call CBTrace(CBTRACEF_ALWAYS, ThisMimic.Name, "m_OPCSet_SignalTrackName_OnConnection", Err.Description)
	End Sub
	
	Private Sub m_OPCSet_SignalTrackName_OnRefresh(lIndex As Long, Value As Variant, Status As fvVariableStatus)
	On Error GoTo ErrorHandler
	        Call CBTrace(CBTRACE_VBA, ThisMimic.Name, "m_OPCSet_SignalTrackName_OnRefresh", "Begin Function")
	If m_OPCSet_SignalTrackName.IsAllGood = True Then Update_RouteTracknames
	Exit Sub
	ErrorHandler:
	        Call CBTrace(CBTRACEF_ALWAYS, ThisMimic.Name, "m_OPCSet_SignalTrackName_OnRefresh", Err.Description)
	End Sub
	Sub Update_RouteTracknames()
	On Error GoTo ErrorHandler
	        Call CBTrace(CBTRACE_VBA, ThisMimic.Name, "Update_RouteTracknames", "Begin Function")
	Dim iCount As Long
	
	If m_OPCSet_RouteBlockingStatus.IsAllGood = False Then Exit Sub
	
	For iCount = 0 To UBound(m_Routes(m_iRouteCommandType).SignalList)
	If m_OPCSet_RouteBlockingStatus.Item(iCount).Value = 0 Then
	ThisMimic.Graphics("optDest" & iCount + 1).Enabled = False
	Else
	ThisMimic.Graphics("optDest" & iCount + 1).Enabled = True
	End If
	Select Case iCount + 1
	            Case 1, 6, 11, 16, 21
	                ThisMimic.Graphics("optDest" & iCount + 1).Left = 16
	            Case 2, 7, 12, 17, 22
	                ThisMimic.Graphics("optDest" & iCount + 1).Left = 120
	            Case 3, 8, 13, 18, 23
	                ThisMimic.Graphics("optDest" & iCount + 1).Left = 224
	            Case 4, 9, 14, 19, 24
	                ThisMimic.Graphics("optDest" & iCount + 1).Left = 329
	            Case 5, 10, 15, 20, 25
	                ThisMimic.Graphics("optDest" & iCount + 1).Left = 428
	        End Select
	
	
	Next iCount
	Exit Sub
	ErrorHandler:
	        Call CBTrace(CBTRACEF_ALWAYS, ThisMimic.Name, "Update_RouteTracknames", Err.Description)
	End Sub
	'* Subroutine: GetGTrackName
	    '* Retrieves the Track name based on the Route ID selected.
	    '* ************************************************************************************
	    Private Function GetTrackName(strRouteName As String) As Boolean
	    On Error GoTo ErrorHandler
	        Call CBTrace(CBTRACE_VBA, ThisMimic.Name, "GetSPKSName", "Begin Function")
	
	        'To Extract the GTIZ object name from the point name from the GTIZ_List.xml located in the HMI working files folder.
	        Dim strXMLString As String
	        Dim oDoc As DOMDocument
	        Dim oRouteElementsList As IXMLDOMNodeList
	        Dim oRouteElement As IXMLDOMElement
	        Dim oTrackElementsList As IXMLDOMNodeList
	        Dim oTrackElement As IXMLDOMElement
	        Dim str_Temp As String
	        Dim i As Integer
	        Dim c_strCurrentAreaAttr As String
	        Dim c_strRouteNode As String
	        Dim c_strNameAttr As String
	        Dim strBranch As String
	        
	        
	        
	        GetTrackName = False
	       
	        c_strRouteNode = "Route"
	        c_strNameAttr = "Name"
	    
	        strXMLString = ThisProject.Path & "\Working Files\RouteList.xml"
	       
	        Set oDoc = New DOMDocument
	        
	        If (oDoc.Load(strXMLString) = True) Then
	            
	            Set oRouteElementsList = oDoc.documentElement.selectNodes("//" & c_strRouteNode & "[@" & c_strNameAttr & "=""" & strRouteName & """]")
	        
	                For Each oRouteElement In oRouteElementsList
	                
	                   If oRouteElement.nodeTypedValue <> "" Then
	                      m_colroute.Add Array(strRouteName, oRouteElement.nodeTypedValue), strRouteName
	                      GetTrackName = True 'oRouteElement.nodeTypedValue '.selectNodes(".//" & "TrackName")
	                   End If
	                   
	                Next oRouteElement
	    
	            Set oRouteElementsList = Nothing
	            Set oTrackElementsList = Nothing
	            
	        End If
	        
	        Set oDoc = Nothing
	     
	    Exit Function
	ErrorHandler:
	        Call CBTrace(CBTRACEF_ALWAYS, ThisMimic.Name, "GetTrackName", Err.Description)
	    End Function
	'=======================================================================================
	'=======================================================================================
	'Procedures  : optRouteTypes
	'Type       : Sub
	'Objective  : Set the type of the route
	'Parameters : N/A
	'Return     : N/A
	'Obs        : The exception management will be realised into the ShowDestinations function
	'=======================================================================================
	' Rev       Date        Modified by       Description
	'---------------------------------------------------------------------------------------
	'  1     2011/08/11     Artur Valverde    Creation
	'=======================================================================================
	Private Sub optPadrao_Change()
	   m_strRouteCommandTag = c_strNormalRouteCommandTag
	   m_iRouteCommandType = c_iNormalRoute
	   ShowDestinations
	
	End Sub
	
	Private Sub optComboio_Change()
	  m_strRouteCommandTag = c_strPermanentRouteCommandTag
	  m_iRouteCommandType = c_iPermanentRoute
	 ShowDestinations
	    
	End Sub
	'Final optRouteTypes procedures
	'=======================================================================================
	
	
	'=======================================================================================
	'=======================================================================================
	'Procedure  : Mimic_Run
	'Type       : Sub
	'Objective  : Manages the initial values of the variables and set the Command variable
	'Parameters : N/A
	'Return     : N/A
	'=======================================================================================
	' Rev       Date        Modified by       Description
	'---------------------------------------------------------------------------------------
	'  1     2011/08/11     Artur Valverde    Creation
	'        2011/12/26     Rafaela Parmezao  Me.Caption (CR259207)
	'=======================================================================================
	Private Sub Mimic_Run()
	    Dim i As Integer
	    Dim sSignalName As String
	
	    On Error GoTo ErrorHandler
	
	     sSignalName = Variables.Add(ThisMimic.Branch & ".HMIRouteSignal.Template.Name", fvVariableTypeRegister).Value
	    
	    'sSignalName = Variables.Item(ThisMimic.Branch & ".HMIRouteSignal.Template.Name").Value
	''    If sSignalName Like "X*" Then
	''        Me.Caption = "   Rota Alinhar - " & Replace(sSignalName, Right(sSignalName, 1), "")
	''    Else
	''        Me.Caption = "   Rota Alinhar - " & sSignalName
	''    End If
	''    '* Disable the button command and clear destination signals
	    ClearDestinations
	  
	    If VerifyVariable(Variables.Add(ThisMimic.Branch & c_strDestinationsTag, fvVariableTypeText)) Then
	        Call ReadDestinations(Variables.Item(ThisMimic.Branch & c_strDestinationsTag).Value)
	        optPadrao.Enabled = True
	        optComboio.Enabled = True
	        optPadrao.Value = True
	        optPadrao_Change
	    Else
	        optPadrao.Enabled = False
	        optComboio.Enabled = False
	    End If
	    
	    optPadrao.Value = True
	    optPadrao_Change
	    
	    
	    
	    Exit Sub
	ErrorHandler:
	    Call CBTrace(CBTRACEF_ALWAYS, ThisMimic.FileName, "Mimic_Run", Err.Description)
	End Sub
	
	
	'=======================================================================================
	'=======================================================================================
	'Procedure  : ClearDestinations
	'Type       : Sub
	'Objective  : Clear the object list with the name of the exit signals
	'Parameters : N/A
	'Return     : N/A
	'=======================================================================================
	' Rev       Date        Modified by       Description
	'---------------------------------------------------------------------------------------
	'  1     2011/08/12     Artur Valverde    Creation
	'=======================================================================================
	Private Sub ClearDestinations()
	    Dim i As Integer 'index
	    
	    On Error GoTo ErrorHandler
	    
	    '* Clear the list of destination
	    For i = 1 To 25
	        ThisMimic.Graphics("optDest" & i).Left = 600
	        ThisMimic.Graphics("optDest" & i).Value = 0
	        ThisMimic.Graphics("optDest" & i).Caption = "Destino " & i
	    Next i
	    
	'    'Clear the command
	    'cmdOkRoute.LocalBranch = ""
	    Variables(Me.Branch & ".OKEnabled%").Value = False
	    
	    Exit Sub
	ErrorHandler:
	    Call CBTrace(CBTRACEF_ALWAYS, ThisMimic.FileName, "ClearDestinations", Err.Description)
	
	End Sub
	
	
	'=======================================================================================
	'=======================================================================================
	'Procedure  : ShowDestinations
	'Type       : Sub
	'Objective  : Manage filling the object list with the name of the exit signals
	'Parameters : N/A
	'Return     : N/A
	'=======================================================================================
	' Rev       Date        Modified by       Description
	'---------------------------------------------------------------------------------------
	'  1     2011/08/11     Artur Valverde    Creation
	'  2     2011/11/24     Wagner Queiroz    GAMBS - Correction to Route from Signal 55C (The HMI was showing different routes with the same destiny signal)
	'  2     2012/01/09     Wagner Queiroz    GAMBS
	'=======================================================================================
	
	Private Sub ShowDestinations()
	    Dim i As Integer 'index
	    Dim iRoute As Integer 'index
	    Dim sRouteDestName      As String
	    Dim m_BlockingRoute As Variable
	    On Error GoTo ErrorHandler
	
	    '* Clear the list of destination and disable the button "OK"
	    ClearDestinations
	    
	   Set m_colroute = New Collection
	  
	   Set m_OPCSet_SignalTrackName = Iconis_MOD_General.CreateNew_Iconis_CLS_OPCSet
	   Set m_OPCSet_RouteBlockingStatus = Iconis_MOD_General.CreateNew_Iconis_CLS_OPCSet
	    For iRoute = 0 To UBound(m_Routes(m_iRouteCommandType).SignalList)
	    
	        If GetTrackName(m_Routes(m_iRouteCommandType).SignalList(iRoute).sRouteID) = True Then
	            ThisMimic.Graphics("optDest" & iRoute + 1).Caption = m_colroute(iRoute + 1)(1) 'GetTrackName(m_Routes(m_iRouteCommandType).SignalList(iRoute).sRouteID)
	        Else
	            ThisMimic.Graphics("optDest" & iRoute + 1).Caption = Split(m_Routes(m_iRouteCommandType).SignalList(iRoute).sRouteID, "_")(2) & "_" & Split(m_Routes(m_iRouteCommandType).SignalList(iRoute).sRouteID, "_")(3)
	        End If
	         
	         m_OPCSet_RouteBlockingStatus.AddItem "OPCCluster:" & m_Routes(m_iRouteCommandType).SignalList(iRoute).sRouteID & ".Blocking.Status.Value", fvVariableTypeBit, c_OPCReadOnly
	           '' m_OPCSet_SignalTrackName.AddItem "OPCCluster:" & m_Routes(m_iRouteCommandType).SignalList(iRoute).sSignalID & ".TrackName.Value", fvVariableTypeText, c_OPCReadOnly
	           'ThisMimic.Graphics("optDest" & iRoute + 1).Caption = m_Routes(m_iRouteCommandType).SignalList(iRoute).sName
	    
	        Next
	 m_OPCSet_RouteBlockingStatus.DoConnect (Me.Name & "m_OPCSet_RouteBlockingStatus")
	 ' m_OPCSet_SignalTrackName.DoConnect (Me.FileName & "m_OPCSet_SignalTrackName")
	 
	    Exit Sub
	ErrorHandler:
	    Call CBTrace(CBTRACEF_ALWAYS, ThisMimic.FileName, "ShowDestinations", Err.Description)
	End Sub
	
	'=======================================================================================
	'=======================================================================================
	'Procedures  : optRouteDestinations
	'Type       : Sub
	'Objective  : Add the route destination command
	'Parameters : N/A
	'Return     : N/A
	'Obs        : The exception management will be realised into the AddCommandOPCVariable
	'             function.
	'=======================================================================================
	' Rev       Date        Modified by       Description
	'---------------------------------------------------------------------------------------
	'  1     2011/08/11     Artur Valverde    Creation
	'=======================================================================================
	Private Sub optDest1_Click()
	    AddCommandOPCVariable optDest1
	    
	End Sub
	
	Private Sub optDest2_Click()
	    AddCommandOPCVariable optDest2
	    
	End Sub
	
	Private Sub optDest3_Click()
	    AddCommandOPCVariable optDest3
	    
	End Sub
	
	Private Sub optDest4_Click()
	    AddCommandOPCVariable optDest4
	    
	End Sub
	
	Private Sub optDest5_Click()
	    AddCommandOPCVariable optDest5
	    
	End Sub
	
	Private Sub optDest6_Click()
	    AddCommandOPCVariable optDest6
	    
	End Sub
	
	Private Sub optDest7_Click()
	    AddCommandOPCVariable optDest7
	    
	End Sub
	
	Private Sub optDest8_Click()
	    AddCommandOPCVariable optDest8
	    
	End Sub
	
	Private Sub optDest9_Click()
	    AddCommandOPCVariable optDest9
	    
	End Sub
	
	Private Sub optDest10_Click()
	    AddCommandOPCVariable optDest10
	    
	End Sub
	
	Private Sub optDest11_Click()
	    AddCommandOPCVariable optDest11
	    
	End Sub
	
	Private Sub optDest12_Click()
	    AddCommandOPCVariable optDest12
	    
	End Sub
	Private Sub optDest13_Click()
	    AddCommandOPCVariable optDest13
	    
	End Sub
	Private Sub optDest14_Click()
	    AddCommandOPCVariable optDest14
	    
	End Sub
	Private Sub optDest15_Click()
	    AddCommandOPCVariable optDest15
	    
	End Sub
	Private Sub optDest16_Click()
	    AddCommandOPCVariable optDest16
	    
	End Sub
	Private Sub optDest17_Click()
	    AddCommandOPCVariable optDest17
	    
	End Sub
	Private Sub optDest18_Click()
	    AddCommandOPCVariable optDest18
	    
	End Sub
	Private Sub optDest19_Click()
	    AddCommandOPCVariable optDest19
	    
	End Sub
	Private Sub optDest20_Click()
	    AddCommandOPCVariable optDest20
	    
	End Sub
	Private Sub optDest21_Click()
	    AddCommandOPCVariable optDest21
	    
	End Sub
	Private Sub optDest22_Click()
	    AddCommandOPCVariable optDest22
	    
	End Sub
	Private Sub optDest23_Click()
	    AddCommandOPCVariable optDest23
	    
	End Sub
	Private Sub optDest24_Click()
	    AddCommandOPCVariable optDest24
	    
	End Sub
	Private Sub optDest25_Click()
	    AddCommandOPCVariable optDest25
	    
	End Sub
	'Final optRouteDestinations procedure
	'=======================================================================================
	
	
	'=======================================================================================
	'=======================================================================================
	'Procedures  : optRouteDestinations
	'Type       : Sub
	'Objective  : Set the OPC variable associated to the command in the button command branch
	'Parameters : optDestination As Object - The destiny signal option button clicked
	'Return     : N/A
	'=======================================================================================
	' Rev       Date        Modified by       Description
	'---------------------------------------------------------------------------------------
	'  1     2011/08/11     Artur Valverde    Creation
	'=======================================================================================
	Private Sub AddCommandOPCVariable(ByRef optDestination As Object)
	    Dim strClusterName      As String
	    Dim strRoute            As String
	    Dim i                   As Integer
	    Dim sRouteID            As String
	    Dim sRouteDestName      As String
	    Dim strRouteName        As String
	    On Error GoTo ErrorHandler
	
	    '* Disable the button "OK"
	   'cmdOkRoute.LocalBranch = ""
	    Variables(Me.Branch & ".OKEnabled%").Value = False
	    
	    If (optDestination.Caption = "") Then Exit Sub
	
	    sRouteCMD = "R_" & Right(Me.Branch, 8) & "_" & optDestination.Caption
	    
	    Variables(Me.Branch & ".OKEnabled%").Value = (Variables(Me.Branch & ".Detection.Template.Security").Value = 0)
	    
	'    '* Extract the cluster name from the branch of the mimic
	    strClusterName = Left(ThisMimic.Branch, InStr(ThisMimic.Branch, c_strServerSeparator))
	'
	   
	'    'Find RouteID
	    For i = 0 To UBound(m_Routes(m_iRouteCommandType).SignalList)
	    
	          If m_colroute.Count > 0 Then
	            strRouteName = m_Routes(m_iRouteCommandType).SignalList(i).sRouteID
	                If optDestination.Caption = m_colroute.Item(i + 1)(1) Then
	                    sRouteID = m_colroute.Item(i + 1)(0) 'm_Routes(m_iRouteCommandType).SignalList(i).sRouteID
	                Exit For
	               End If
	                 
	        Else
	               If optDestination.Caption = Split(m_Routes(m_iRouteCommandType).SignalList(i).sRouteID, "_")(2) & "_" & Split(m_Routes(m_iRouteCommandType).SignalList(i).sRouteID, "_")(3) Then
	                    sRouteID = m_Routes(m_iRouteCommandType).SignalList(i).sRouteID
	              Exit For
	              End If
	              
	        End If
	    Next
	 
	    If sRouteID = "" Then Exit Sub
	
	   ' strRoute = strClusterName & "@" & sRouteID & m_strRouteCommandTag
	   strRoute = strClusterName & sRouteID & m_strRouteCommandTag
	    
	    Set m_OPC_RouteCommand = Variables.Add(strRoute, fvVariableTypeRegister)
	    Exit Sub
	
	ErrorHandler:
	    Call CBTrace(CBTRACEF_ALWAYS, ThisMimic.Name, "AddCommandOPCVariable", Err.Description)
	End Sub
VBA_HOSTPROJECT,END
VBA_REFERENCES,BEGIN
	"stdole", 2, 0, "{00020430-0000-0000-C000-000000000046}"
	"MSForms", 2, 0, "{0D452EE1-E08F-101A-852E-02608C4D0BB4}"
	"FrontVueEx", 2, 0, "{141E3228-8E65-44D3-9F4F-DD4799D613BB}"
	"MSXML2", 3, 0, "{F5078F18-C551-11D3-89B9-0000F81FE221}"
VBA_REFERENCES,END
FONTS,BEGIN
	FONT,1,-13,0,700,0,0,"Arial",0,0
FONTS,END
COLORS,BEGIN
	COLOR,1,0,0,0,0,32,0
	COLOR,2,0,0,0,0,0,0
	COLOR,3,0,0,0,0,0,1
	COLOR,4,64,64,64,0,0,0
	COLOR,5,255,255,255,0,0,0
	COLOR,6,0,0,0,0,44,0
	COLOR,7,172,168,153,0,0,0
	COLOR,8,128,128,128,0,0,0
	COLOR,9,0,0,0,0,45,0
COLORS,END
O,BEGIN,R,"Shape3"
	B,121,67,8,21,121,67,65535,0,6400,0,1,1,1
	ST,0,1,COLOR,1,COLOR,1,0,0,COLOR,3,0,COLOR,3,0,COLOR,2,0,COLOR,2
O,END
O,BEGIN,R,"Shape2"
	B,400,67,125,21,400,67,65535,0,6400,0,1,1,1
	ST,0,1,COLOR,1,COLOR,1,0,0,COLOR,3,0,COLOR,3,0,COLOR,2,0,COLOR,2
O,END
O,BEGIN,R,"Shape1"
	B,549,241,7,84,549,241,65535,0,6400,0,1,1,1
	ST,0,1,COLOR,1,COLOR,1,0,0,COLOR,3,0,COLOR,3,0,COLOR,2,0,COLOR,2
O,END
O,BEGIN,T,"SignalName"
	B,9,35,117,59,9,59,65535,0,6400,0,1,1,1
	ST,0,1,COLOR,1,COLOR,1,0,0,COLOR,2,0,COLOR,2,0,COLOR,2,0,COLOR,2
	AST,5,1,COLOR,1,COLOR,2,0,COLOR,5,0,COLOR,5,0,COLOR,4,0,COLOR,4
	PP,1,9,35,0,0,FONT,1," ",37,FONT,1," ",37
	MULTILANG,BEGIN
		LANG_DEFAULT,1033
		LANG,BEGIN,1033
			ROLE_DEFAULT,-1
			ROLE,-1," ",FONT,1,37
		LANG,END
		LANG,BEGIN,1040
			ROLE_DEFAULT,-1
			ROLE,-1," ",FONT,1,36
		LANG,END
	MULTILANG,END
	A,BEGIN,DT,"Anim1",0,0,"",""
		PP,"HMIRouteSignal.Template.Name"
	A,END
O,END
O,BEGIN,T,"Text3"
	B,18,75,83,91,18,91,65535,0,6400,0,1,0,0
	ST,0,1,COLOR,2,COLOR,2,0,0,COLOR,6,0,COLOR,6,0,COLOR,2,0,COLOR,2
	PP,0,18,75,0,0,FONT,1,"Destinos",36,FONT,1,"Destinos",36
	MULTILANG,BEGIN
		LANG_DEFAULT,2058
		LANG,BEGIN,1033
			ROLE_DEFAULT,-1
			ROLE,-1,"Destinos",FONT,1,36
		LANG,END
		LANG,BEGIN,2058
			ROLE_DEFAULT,0
			ROLE,0,"Destinos",FONT,1,36
		LANG,END
	MULTILANG,END
O,END
O,BEGIN,OCX,"optDest1"
	B,16,93,115,117,10,60,65535,0,6400,0,1,1,1
	ST,5,1,COLOR,2,COLOR,2,1,0,COLOR,3,0,COLOR,3,0,COLOR,2,0,COLOR,2
O,END
O,BEGIN,OCX,"optDest4"
	B,329,94,428,118,10,60,65535,0,6400,0,1,1,1
	ST,5,1,COLOR,2,COLOR,2,1,0,COLOR,3,0,COLOR,3,0,COLOR,2,0,COLOR,2
O,END
O,BEGIN,OCX,"optDest7"
	B,120,120,219,144,10,60,65535,0,6400,0,1,1,1
	ST,5,1,COLOR,2,COLOR,2,1,0,COLOR,3,0,COLOR,3,0,COLOR,2,0,COLOR,2
O,END
O,BEGIN,OCX,"optDest10"
	B,428,120,527,144,10,60,65535,0,6400,0,1,1,1
	ST,5,1,COLOR,2,COLOR,2,1,0,COLOR,3,0,COLOR,3,0,COLOR,2,0,COLOR,2
O,END
O,BEGIN,OCX,"optDest2"
	B,120,93,219,117,10,60,65535,0,6400,0,1,1,1
	ST,5,1,COLOR,2,COLOR,2,1,0,COLOR,3,0,COLOR,3,0,COLOR,2,0,COLOR,2
O,END
O,BEGIN,OCX,"optDest5"
	B,428,94,527,118,10,60,65535,0,6400,0,1,1,1
	ST,5,1,COLOR,2,COLOR,2,1,0,COLOR,3,0,COLOR,3,0,COLOR,2,0,COLOR,2
O,END
O,BEGIN,OCX,"optDest8"
	B,224,120,323,144,10,60,65535,0,6400,0,1,1,1
	ST,5,1,COLOR,2,COLOR,2,1,0,COLOR,3,0,COLOR,3,0,COLOR,2,0,COLOR,2
O,END
O,BEGIN,OCX,"optDest11"
	B,16,144,115,168,10,60,65535,0,6400,0,1,1,1
	ST,5,1,COLOR,2,COLOR,2,1,0,COLOR,3,0,COLOR,3,0,COLOR,2,0,COLOR,2
O,END
O,BEGIN,OCX,"optDest3"
	B,224,93,323,117,10,60,65535,0,6400,0,1,1,1
	ST,5,1,COLOR,2,COLOR,2,1,0,COLOR,3,0,COLOR,3,0,COLOR,2,0,COLOR,2
O,END
O,BEGIN,OCX,"optDest6"
	B,16,120,115,144,10,60,65535,0,6400,0,1,1,1
	ST,5,1,COLOR,2,COLOR,2,1,0,COLOR,3,0,COLOR,3,0,COLOR,2,0,COLOR,2
O,END
O,BEGIN,OCX,"optDest9"
	B,329,120,428,144,10,60,65535,0,6400,0,1,1,1
	ST,5,1,COLOR,2,COLOR,2,1,0,COLOR,3,0,COLOR,3,0,COLOR,2,0,COLOR,2
O,END
O,BEGIN,OCX,"optDest12"
	B,120,144,219,168,10,60,65535,0,6400,0,1,1,1
	ST,5,1,COLOR,2,COLOR,2,1,0,COLOR,3,0,COLOR,3,0,COLOR,2,0,COLOR,2
O,END
O,BEGIN,T,"Text2"
	B,128,13,168,29,128,29,65535,0,6400,0,1,0,0
	ST,0,1,COLOR,2,COLOR,2,0,0,COLOR,6,0,COLOR,6,0,COLOR,2,0,COLOR,2
	PP,0,128,13,0,0,FONT,1,"Tipo",36,FONT,1,"Tipo",36
	MULTILANG,BEGIN
		LANG_DEFAULT,2058
		LANG,BEGIN,1033
			ROLE_DEFAULT,0
			ROLE,0,"Type",FONT,1,37
		LANG,END
		LANG,BEGIN,2058
			ROLE_DEFAULT,0
			ROLE,0,"Tipo",FONT,1,37
		LANG,END
	MULTILANG,END
O,END
O,BEGIN,T,"Text4"
	B,16,13,71,29,16,29,65535,0,6400,0,1,0,0
	ST,0,1,COLOR,2,COLOR,2,0,0,COLOR,6,0,COLOR,6,0,COLOR,2,0,COLOR,2
	PP,0,16,13,0,0,FONT,1,"Origen",36,FONT,1,"Origen",36
	MULTILANG,BEGIN
		LANG_DEFAULT,2058
		LANG,BEGIN,1033
			ROLE_DEFAULT,-1
			ROLE,-1,"Origen",FONT,1,36
		LANG,END
		LANG,BEGIN,2058
			ROLE_DEFAULT,0
			ROLE,-1,"Origen",FONT,1,36
			ROLE,0,"Origen",FONT,1,36
		LANG,END
	MULTILANG,END
O,END
O,BEGIN,OCX,"optPadrao"
	B,154,35,242,59,10,60,65535,0,6400,0,1,1,1
	ST,5,1,COLOR,2,COLOR,2,1,0,COLOR,6,0,COLOR,6,0,COLOR,2,0,COLOR,2
O,END
O,BEGIN,OCX,"optComboio"
	B,264,35,366,59,10,60,65535,0,6400,0,1,1,1
	ST,5,1,COLOR,2,COLOR,2,1,0,COLOR,6,0,COLOR,6,0,COLOR,2,0,COLOR,2
O,END
O,BEGIN,T,"btnOK1"
	B,337,267,416,296,337,296,65535,0,6400,0,1,1,1
	ST,0,1,COLOR,2,COLOR,2,0,0,COLOR,3,0,COLOR,3,0,COLOR,2,0,COLOR,2
	AST,7,2,COLOR,2,COLOR,3,0,COLOR,7,0,COLOR,7,0,COLOR,5,0,COLOR,5
	PP,1,337,267,0,0,FONT,1,"Cancelar",37,FONT,1,"Cancelar",37
	MULTILANG,BEGIN
		LANG_DEFAULT,2058
		LANG,BEGIN,1033
			ROLE_DEFAULT,-1
			ROLE,-1,"Cancelar",FONT,1,37
		LANG,END
		LANG,BEGIN,2058
			ROLE_DEFAULT,0
			ROLE,0,"Cancelar",FONT,1,37
		LANG,END
	MULTILANG,END
	A,BEGIN,LC,"Anim2",0,0,"",""
		PP,"*","*"
	A,END
O,END
O,BEGIN,T,"btnOK"
	B,161,267,240,296,161,296,65535,0,6400,0,1,1,1
	ST,0,1,COLOR,2,COLOR,2,0,0,COLOR,3,0,COLOR,3,0,COLOR,2,0,COLOR,2
	AST,7,2,COLOR,2,COLOR,3,0,COLOR,8,0,COLOR,8,0,COLOR,5,0,COLOR,5
	PP,1,161,267,0,0,FONT,1,"Executar",37,FONT,1,"Executar",37
	MULTILANG,BEGIN
		LANG_DEFAULT,2058
		LANG,BEGIN,1033
			ROLE_DEFAULT,-1
			ROLE,-1,"Execute",FONT,1,37
		LANG,END
		LANG,BEGIN,2058
			ROLE_DEFAULT,0
			ROLE,-1,"Ejecutar",FONT,1,37
			ROLE,0,"Ejecutar",FONT,1,37
		LANG,END
	MULTILANG,END
	A,BEGIN,SB,"Anim1",0,0,"",""
		PP,"tip%",0,0,0,0,0.000000
	A,END
	A,BEGIN,CB,"Anim2",0,0,"",""
		PP,"OKEnabled%"
		COL,1,COLOR,3,COLOR,3
		COL,1,COLOR,3,COLOR,3
		COL,1,COLOR,3,COLOR,3
		COL,1,COLOR,9,COLOR,9
		COL,1,COLOR,2,COLOR,2
		COL,1,COLOR,9,COLOR,9
	A,END
O,END
O,BEGIN,OCX,"optDest13"
	B,224,144,323,168,10,60,65535,0,6400,0,1,1,1
	ST,5,1,COLOR,2,COLOR,2,1,0,COLOR,3,0,COLOR,3,0,COLOR,2,0,COLOR,2
O,END
O,BEGIN,OCX,"optDest14"
	B,329,144,428,168,10,60,65535,0,6400,0,1,1,1
	ST,5,1,COLOR,2,COLOR,2,1,0,COLOR,3,0,COLOR,3,0,COLOR,2,0,COLOR,2
O,END
O,BEGIN,OCX,"optDest15"
	B,428,144,527,168,10,60,65535,0,6400,0,1,1,1
	ST,5,1,COLOR,2,COLOR,2,1,0,COLOR,3,0,COLOR,3,0,COLOR,2,0,COLOR,2
O,END
O,BEGIN,OCX,"optDest16"
	B,16,170,115,194,10,60,65535,0,6400,0,1,1,1
	ST,5,1,COLOR,2,COLOR,2,1,0,COLOR,3,0,COLOR,3,0,COLOR,2,0,COLOR,2
O,END
O,BEGIN,OCX,"optDest17"
	B,120,170,219,194,10,60,65535,0,6400,0,1,1,1
	ST,5,1,COLOR,2,COLOR,2,1,0,COLOR,3,0,COLOR,3,0,COLOR,2,0,COLOR,2
O,END
O,BEGIN,OCX,"optDest18"
	B,224,170,323,194,10,60,65535,0,6400,0,1,1,1
	ST,5,1,COLOR,2,COLOR,2,1,0,COLOR,3,0,COLOR,3,0,COLOR,2,0,COLOR,2
O,END
O,BEGIN,OCX,"optDest19"
	B,329,170,428,194,10,60,65535,0,6400,0,1,1,1
	ST,5,1,COLOR,2,COLOR,2,1,0,COLOR,3,0,COLOR,3,0,COLOR,2,0,COLOR,2
O,END
O,BEGIN,OCX,"optDest20"
	B,428,170,527,194,10,60,65535,0,6400,0,1,1,1
	ST,5,1,COLOR,2,COLOR,2,1,0,COLOR,3,0,COLOR,3,0,COLOR,2,0,COLOR,2
O,END
O,BEGIN,OCX,"optDest21"
	B,16,194,115,218,10,60,65535,0,6400,0,1,1,1
	ST,5,1,COLOR,2,COLOR,2,1,0,COLOR,3,0,COLOR,3,0,COLOR,2,0,COLOR,2
O,END
O,BEGIN,OCX,"optDest22"
	B,120,194,219,218,10,60,65535,0,6400,0,1,1,1
	ST,5,1,COLOR,2,COLOR,2,1,0,COLOR,3,0,COLOR,3,0,COLOR,2,0,COLOR,2
O,END
O,BEGIN,OCX,"optDest23"
	B,224,194,323,218,10,60,65535,0,6400,0,1,1,1
	ST,5,1,COLOR,2,COLOR,2,1,0,COLOR,3,0,COLOR,3,0,COLOR,2,0,COLOR,2
O,END
O,BEGIN,OCX,"optDest24"
	B,329,194,428,218,10,60,65535,0,6400,0,1,1,1
	ST,5,1,COLOR,2,COLOR,2,1,0,COLOR,3,0,COLOR,3,0,COLOR,2,0,COLOR,2
O,END
O,BEGIN,OCX,"optDest25"
	B,428,194,527,218,10,60,65535,0,6400,0,1,1,1
	ST,5,1,COLOR,2,COLOR,2,1,0,COLOR,3,0,COLOR,3,0,COLOR,2,0,COLOR,2
O,END
