ASCII32,25,7,2019,21:55,29,1.1
W,BEGIN,"mmc_TrainServiceID","mmc_TrainServiceID"
	TEMPLATE,"",0,0,0,0,0,0,0,0,0,0,0,0
	POSITION,862,540
	SIZE,200,140,200,140,0,0,0,1280,1024,194,118
	BACKCOLOR,191,191,191,0,0,0
	TITLE,1
	MULTILANG,BEGIN
		LANG_DEFAULT,1033
		LANG,BEGIN,1033
			ROLE_DEFAULT,-1
			ROLE,-1,""
		LANG,END
		LANG,BEGIN,2058
			ROLE_DEFAULT,-1
			ROLE,-1,"Tren 1"
		LANG,END
	MULTILANG,END
	STYLE,1,0,0,1,1,0,0,0,0,1,0,1,0,0,1,0,1
	GRID,1,1,5,5,0,0,0,0,0,0
	LAYERS,65535
	RIGHTS,0,1,0.000000,64.000000,1,65535,0,0
	INCLUDED,0,1,1,380,425
	LINK,1,"",""
	LINK,2,"",""
	LINK,3,"",""
	LINK,4,"",""
	LINK,5,"",""
	LINK,6,"",""
	LINK,7,"",""
	LINK,8,"",""
	LINK,9,"",""
	LINK,10,"",""
	BACKBMP,"",0,0
	BACKOBJECT,"",0,0
	BEFORE,"","","",""
	EVENTS,1
	BINOBJ,"mmc_TrainServiceID.binary"
W,END
VBA_HOSTPROJECT,BEGIN
	Option Explicit
	
	'* *******************************************************************************************
	'* Constants
	'* *******************************************************************************************
	
	' OPC tags used for retrieving data
	Private Const c_sCurTrainIDTag As String = ".HMITrain.iTrainID"
	Private Const c_sCurHMITrainIDTag As String = ".Attributes.HMITETrain.bstrPlug_6"
	Private Const c_sCurServiceNumTag As String = ".Attributes.HMITETrain.bstrPlug_1"
	
	' OPC tags used for command sending
	Private Const c_sOPCsTrainInterposeCmdTag As String = "MainKernelBasic.TrainModule.BasicCmd.bstrInterposeBerth"
	
	'* *******************************************************************************************
	'* Variables
	'* *******************************************************************************************
	' OPC Set Items
	Dim WithEvents m_OPCSet_CurTrainStatus As Iconis_CLS_OPCSet
	Dim m_OPCSetItemCurTrainID As Iconis_CLS_OPCSet_Item
	Dim m_OPCSetItemCurHMITrainID As Iconis_CLS_OPCSet_Item
	Dim m_OPCSetItemCurServiceNum As Iconis_CLS_OPCSet_Item
	
	' Train interpose command variable to identify the train
	Dim m_OPCsTrainInterposeCmd As Variable
	
	' Current train attributes
	Dim m_iCurTrainID As String
	Dim m_sCurHMITrainID As String
	Dim m_sCurServiceNum As String
	
	' Initialization done
	Dim m_bInitDone As Boolean
	
	' OPC Cluster
	Dim m_strClusterName As String
	
	'* *******************************************************************************************
	'* Mimic_Open
	'* *******************************************************************************************
	Private Sub Mimic_Open()
	On Error GoTo ErrorHandler
	
	    m_bInitDone = False
	    ThisMimic.Caption = ""
	    ' Initialize the mimic
	    Initialize
	    
	    ' Extract the cluster name from the branch of the mimic
	    m_strClusterName = GetOPCClusterFromBranch(ThisMimic.Branch)
	    
	    ' Set the command variables
	    Set m_OPCsTrainInterposeCmd = Variables.Add(c_strClusterLevel2 & c_sOPCsTrainInterposeCmdTag, fvVariableTypeText)
	    
	    ' Create the OPCSet to read the current status
	    Set m_OPCSet_CurTrainStatus = Iconis_Mod_General.CreateNew_Iconis_CLS_OPCSet
	    Set m_OPCSetItemCurTrainID = m_OPCSet_CurTrainStatus.AddItem(ThisMimic.Branch & c_sCurTrainIDTag, fvVariableTypeRegister, c_OPCReadOnly)
	    Set m_OPCSetItemCurHMITrainID = m_OPCSet_CurTrainStatus.AddItem(ThisMimic.Branch & c_sCurHMITrainIDTag, fvVariableTypeText, c_OPCReadOnly)
	    Set m_OPCSetItemCurServiceNum = m_OPCSet_CurTrainStatus.AddItem(ThisMimic.Branch & c_sCurServiceNumTag, fvVariableTypeText, c_OPCReadOnly)
	    m_OPCSet_CurTrainStatus.DoConnect (Me.Name & ThisMimic.Branch)
	
	Exit Sub
	ErrorHandler:
	Call CBTrace(CBTRACEF_ALWAYS, Me.Name, "Mimic_Open", Err.Description)
	End Sub
	
	'* *******************************************************************************************
	'* Mimic_BeforeClose
	'* *******************************************************************************************
	Private Function Mimic_BeforeClose() As Boolean
	On Error GoTo ErrorHandler
	
	    If Not (m_OPCSet_CurTrainStatus Is Nothing) Then
	        m_OPCSet_CurTrainStatus.Destroy
	        Set m_OPCSetItemCurTrainID = Nothing
	        Set m_OPCSetItemCurHMITrainID = Nothing
	        Set m_OPCSetItemCurServiceNum = Nothing
	    End If
	        
	Exit Function
	ErrorHandler:
	    Call CBTrace(CBTRACEF_ALWAYS, Me.Name, "Mimic_BeforeClose", Err.Description)
	End Function
	
	'* *******************************************************************************************
	'* Initialize: Set the mimic with the default settings
	'* *******************************************************************************************
	Sub Initialize()
	On Error GoTo ErrorHandler
	
	    ' Set the title label with the HMITrainID
	     SetHMITrainID ("[ID]")
	    
	    ' Text boxes cleared
	    TextBox_1.Value = ""
	
	    ' Enable or disable OK button
	    ManageOKButton
	    
	    ' Enable the cancel button
	    Variables.Item(ThisMimic.Branch & ".Button_2_Active%").Value = True
	
	Exit Sub
	ErrorHandler:
	Call CBTrace(CBTRACEF_ALWAYS, Me.Name, "Initialize", Err.Description)
	End Sub
	
	'* *******************************************************************************************
	'* m_OPCSet_CurTrainStatus_OnConnection: Set the display of the current data
	'* *******************************************************************************************
	Private Sub m_OPCSet_CurTrainStatus_OnConnection(arrValue() As Variant, arrStatus() As fvVariableStatus)
	On Error GoTo ErrorHandler
	
	    m_iCurTrainID = m_OPCSetItemCurTrainID.Value
	    m_sCurHMITrainID = m_OPCSetItemCurHMITrainID.Value
	    m_sCurServiceNum = m_OPCSetItemCurServiceNum.Value
	    
	    UpdateMimicWithCurrentValues
	    
	    m_bInitDone = True
	    ThisMimic.Caption = "Tren " & m_iCurTrainID
	Exit Sub
	ErrorHandler:
	Call CBTrace(CBTRACEF_ALWAYS, Me.Name, "m_OPCSet_CurTrainStatus_OnConnection", Err.Description)
	End Sub
	
	'* *******************************************************************************************
	'* UpdateMimicWithCurrentValues: Fill the mimic according the current train data
	'* *******************************************************************************************
	Function UpdateMimicWithCurrentValues()
	On Error GoTo ErrorHandler
	   
	    ' Set the title label with the HMITrainID
	    SetHMITrainID (m_sCurHMITrainID)
	    
	    ' Set the text boxes according the current data
	    TextBox_1.Value = m_sCurServiceNum
	    
	    ' Enable or disable OK button
	    ManageOKButton
	    
	Exit Function
	ErrorHandler:
	Call CBTrace(CBTRACEF_ALWAYS, Me.Name, "UpdateMimicWithCurrentValues", Err.Description)
	End Function
	
	'* *******************************************************************************************
	'* Manage the modification of service number
	'* *******************************************************************************************
	Private Sub TextBox_1_Change()
	On Error GoTo ErrorHandler
	
	    ManageOKButton
	    
	Exit Sub
	ErrorHandler:
	Call CBTrace(CBTRACEF_ALWAYS, Me.Name, "TextBox_1_Change", Err.Description)
	End Sub
	
	'* *******************************************************************************************
	'* ManageOKButton
	'* *******************************************************************************************
	Private Sub ManageOKButton()
	
	On Error GoTo ErrorHandler
	
	    Variables.Item(ThisMimic.Branch & ".Button_1_Active%").Value = (TextBox_1.Value <> "") And _
	                                                                   (Val(TextBox_1.Value) >= 1) And _
	                                                                   (Val(TextBox_1.Value) <= 9999)
	    
	Exit Sub
	ErrorHandler:
	Call CBTrace(CBTRACEF_ALWAYS, Me.Name, "ManageOKButton", Err.Description)
	End Sub
	
	'* *******************************************************************************************
	'* Manage the click on OK button
	'* *******************************************************************************************
	Private Sub Button_1_Click()
	On Error GoTo ErrorHandler
	
	    Dim sInterposeCmd       As String
	    Dim strTrainServiceID   As String
	    If Variables.Item(ThisMimic.Branch & ".Button_1_Active%").Value Then
	    
	        If (m_iCurTrainID <> "") Then 'And (TextBox_1.Value <> m_sCurServiceNum) Then
	        
	            strTrainServiceID = TextBox_1.Value
	            
	            While Len(m_OPCSetItemCurServiceNum.Value) > Len(strTrainServiceID)
	                
	                strTrainServiceID = "0" & strTrainServiceID
	            
	            Wend
	            
	            sInterposeCmd = "%UniqueID%|" & m_iCurTrainID & "|ManualAssociationToTimetableService|" & strTrainServiceID
	            WriteTrainInterposeCmd sInterposeCmd
	        End If
	        
	       
	        Me.Close
	    
	    End If
	    
	Exit Sub
	ErrorHandler:
	Call CBTrace(CBTRACEF_ALWAYS, Me.Name, "Button_1_Click", Err.Description)
	End Sub
	
	'* *******************************************************************************************
	'* WriteTrainInterposeCmd: Write the interpose command to OPC plug
	'* *******************************************************************************************
	Private Sub WriteTrainInterposeCmd(StringCmd As String)
	On Error GoTo ErrorHandler
	    
	    If (Check_OPC_Variable(m_OPCsTrainInterposeCmd)) And (StringCmd <> "") Then
	        m_OPCsTrainInterposeCmd.Value = StringCmd
	        Call CBTrace(CBTRACEF_ALWAYS, Me.Name, "interpose Command Written", StringCmd)
	    End If
	    
	Exit Sub
	ErrorHandler:
	Call CBTrace(CBTRACEF_ALWAYS, Me.Name, "WriteTrainInterposeCmd", Err.Description)
	End Sub
	
	'* *******************************************************************************************
	'* SetHMITrainID
	'* *******************************************************************************************
	Private Sub SetHMITrainID(strHMITrainID As String)
	
	    Variables.Item(ThisMimic.Branch & ".Title%").Value = Replace(Label_1.Text, "[ID]", strHMITrainID)
	
	End Sub
	
	'* *******************************************************************************************
	'* Buttons hovering management
	'* *******************************************************************************************
	Private Sub Button_1_MouseEnter(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Long, ByVal y As Long)
	
	    Variables.Item(ThisMimic.Branch & ".Button_1_Hover%").Value = True
	
	End Sub
	
	'* *******************************************************************************************
	'* Buttons hovering management
	'* *******************************************************************************************
	Private Sub Button_1_MouseLeave(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Long, ByVal y As Long)
	
	    Variables.Item(ThisMimic.Branch & ".Button_1_Hover%").Value = False
	
	End Sub
	
	'* *******************************************************************************************
	'* Buttons hovering management
	'* *******************************************************************************************
	Private Sub Button_2_MouseEnter(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Long, ByVal y As Long)
	
	    Variables.Item(ThisMimic.Branch & ".Button_2_Hover%").Value = True
	
	End Sub
	
	'* *******************************************************************************************
	'* Buttons hovering management
	'* *******************************************************************************************
	Private Sub Button_2_MouseLeave(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Long, ByVal y As Long)
	
	    Variables.Item(ThisMimic.Branch & ".Button_2_Hover%").Value = False
	
	End Sub
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
VBA_HOSTPROJECT,END
VBA_REFERENCES,BEGIN
	"stdole", 2, 0, "{00020430-0000-0000-C000-000000000046}"
	"MSForms", 2, 0, "{0D452EE1-E08F-101A-852E-02608C4D0BB4}"
	"MSXML2", 3, 0, "{F5078F18-C551-11D3-89B9-0000F81FE221}"
	"FrontVueEx", 2, 0, "{141E3228-8E65-44D3-9F4F-DD4799D613BB}"
VBA_REFERENCES,END
FONTS,BEGIN
	FONT,1,-13,0,400,0,0,"Tahoma",0,0
	FONT,2,-13,0,700,0,0,"Arial",0,0
FONTS,END
COLORS,BEGIN
	COLOR,1,0,0,0,0,0,1
	COLOR,2,0,0,0,0,0,0
	COLOR,3,255,255,255,0,0,0
	COLOR,4,128,128,128,0,0,0
	COLOR,5,191,191,191,0,0,0
	COLOR,6,192,192,192,0,0,0
	COLOR,7,64,64,64,0,0,0
COLORS,END
O,BEGIN,T,"Label_1"
	B,15,5,130,30,15,30,65535,0,6400,0,1,1,1
	ST,0,1,COLOR,1,COLOR,1,0,0,COLOR,1,0,COLOR,1,0,COLOR,2,0,COLOR,2
	PP,1,15,5,0,0,FONT,1,"",36,FONT,1,"",36
	MULTILANG,BEGIN
		LANG_DEFAULT,1033
		LANG,BEGIN,1033
			ROLE_DEFAULT,-1
			ROLE,-1,"Train [ID]",FONT,1,36
		LANG,END
	MULTILANG,END
	A,BEGIN,DT,"Anim1",0,0,"",""
		PP,"Title%"
	A,END
O,END
O,BEGIN,T,"Label_2"
	B,9,34,69,59,9,59,65535,0,6400,0,1,1,0
	ST,0,1,COLOR,2,COLOR,2,0,0,COLOR,1,0,COLOR,1,0,COLOR,2,0,COLOR,2
	PP,1,9,34,0,0,FONT,1,"",38,FONT,1,"",38
	MULTILANG,BEGIN
		LANG_DEFAULT,1033
		LANG,BEGIN,1033
			ROLE_DEFAULT,-1
			ROLE,-1,"ID",FONT,2,38
		LANG,END
	MULTILANG,END
O,END
O,BEGIN,OCX,"TextBox_1"
	B,95,34,150,59,10,60,65535,0,6400,0,1,1,1
	ST,5,1,COLOR,3,COLOR,3,1,0,COLOR,4,0,COLOR,4,0,COLOR,2,0,COLOR,2
O,END
O,BEGIN,T,"Button_1"
	B,11,79,91,104,11,104,65535,0,6400,0,1,1,1
	ST,0,1,COLOR,2,COLOR,2,0,0,COLOR,5,0,COLOR,5,0,COLOR,2,0,COLOR,2
	AST,7,2,COLOR,2,COLOR,5,0,COLOR,4,0,COLOR,4,0,COLOR,3,0,COLOR,3
	PP,1,11,79,0,0,FONT,1,"",37,FONT,1,"",37
	MULTILANG,BEGIN
		LANG_DEFAULT,1033
		LANG,BEGIN,1033
			ROLE_DEFAULT,-1
			ROLE,-1,"Ejecutar",FONT,2,37
		LANG,END
	MULTILANG,END
	A,BEGIN,CBG,"Anim1",0,0,"",""
		PP,"Button_1_Hover%","Button_1_Active%","",""
		COL,0,COLOR,6,COLOR,6
		COL,0,COLOR,6,COLOR,6
		COL,0,COLOR,4,COLOR,4
		COL,0,COLOR,7,COLOR,7
		COL,0,COLOR,2,COLOR,2
		COL,0,COLOR,2,COLOR,2
		COL,0,COLOR,2,COLOR,2
		COL,0,COLOR,2,COLOR,2
		COL,0,COLOR,2,COLOR,2
		COL,0,COLOR,2,COLOR,2
		COL,0,COLOR,2,COLOR,2
		COL,0,COLOR,2,COLOR,2
		COL,0,COLOR,2,COLOR,2
		COL,0,COLOR,2,COLOR,2
		COL,0,COLOR,2,COLOR,2
		COL,0,COLOR,2,COLOR,2
		COL,0,COLOR,2,COLOR,2
		COL,1,COLOR,4,COLOR,4
		COL,1,COLOR,4,COLOR,4
		COL,1,COLOR,2,COLOR,2
		COL,1,COLOR,2,COLOR,2
		COL,0,COLOR,2,COLOR,2
		COL,0,COLOR,2,COLOR,2
		COL,0,COLOR,2,COLOR,2
		COL,0,COLOR,2,COLOR,2
		COL,0,COLOR,2,COLOR,2
		COL,0,COLOR,2,COLOR,2
		COL,0,COLOR,2,COLOR,2
		COL,0,COLOR,2,COLOR,2
		COL,0,COLOR,2,COLOR,2
		COL,0,COLOR,2,COLOR,2
		COL,0,COLOR,2,COLOR,2
		COL,0,COLOR,2,COLOR,2
		COL,0,COLOR,2,COLOR,2
	A,END
	A,BEGIN,SB,"Anim2",0,0,"",""
		PP,"NotUsed%",1,0,0,0,0.000000
	A,END
O,END
O,BEGIN,T,"Button_2"
	B,101,79,181,104,101,104,65535,0,6400,0,1,1,1
	ST,0,1,COLOR,2,COLOR,2,0,0,COLOR,5,0,COLOR,5,0,COLOR,2,0,COLOR,2
	AST,7,2,COLOR,2,COLOR,5,0,COLOR,4,0,COLOR,4,0,COLOR,3,0,COLOR,3
	PP,1,101,79,0,0,FONT,1,"",37,FONT,1,"",37
	MULTILANG,BEGIN
		LANG_DEFAULT,1033
		LANG,BEGIN,1033
			ROLE_DEFAULT,-1
			ROLE,-1,"Cancelar",FONT,2,37
		LANG,END
	MULTILANG,END
	A,BEGIN,CBG,"Anim1",0,0,"",""
		PP,"Button_2_Hover%","Button_2_Active%","",""
		COL,0,COLOR,6,COLOR,6
		COL,0,COLOR,6,COLOR,6
		COL,0,COLOR,4,COLOR,4
		COL,0,COLOR,7,COLOR,7
		COL,0,COLOR,2,COLOR,2
		COL,0,COLOR,2,COLOR,2
		COL,0,COLOR,2,COLOR,2
		COL,0,COLOR,2,COLOR,2
		COL,0,COLOR,2,COLOR,2
		COL,0,COLOR,2,COLOR,2
		COL,0,COLOR,2,COLOR,2
		COL,0,COLOR,2,COLOR,2
		COL,0,COLOR,2,COLOR,2
		COL,0,COLOR,2,COLOR,2
		COL,0,COLOR,2,COLOR,2
		COL,0,COLOR,2,COLOR,2
		COL,0,COLOR,2,COLOR,2
		COL,1,COLOR,2,COLOR,2
		COL,1,COLOR,2,COLOR,2
		COL,1,COLOR,2,COLOR,2
		COL,1,COLOR,2,COLOR,2
		COL,0,COLOR,2,COLOR,2
		COL,0,COLOR,2,COLOR,2
		COL,0,COLOR,2,COLOR,2
		COL,0,COLOR,2,COLOR,2
		COL,0,COLOR,2,COLOR,2
		COL,0,COLOR,2,COLOR,2
		COL,0,COLOR,2,COLOR,2
		COL,0,COLOR,2,COLOR,2
		COL,0,COLOR,2,COLOR,2
		COL,0,COLOR,2,COLOR,2
		COL,0,COLOR,2,COLOR,2
		COL,0,COLOR,2,COLOR,2
		COL,0,COLOR,2,COLOR,2
	A,END
	A,BEGIN,LC,"Anim2",0,0,"",""
		PP,"mmc_TrainServiceID","*"
	A,END
O,END
